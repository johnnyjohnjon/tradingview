{"ast":null,"code":"import _slicedToArray from\"/Users/JohnD/Documents/tradingview/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/JohnD/Documents/tradingview/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useContext,useEffect,useState}from'react';import Chart from\"./chart-components/Chart\";import styled from\"styled-components\";import{GlobalContext}from'../context/GlobalState';import\"../chart.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CSS=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\n  .chart-info-area{\\n    margin: 0 16% 0 16%;\\n    padding-top: 120px;\\n  }\\n\\n  .stock-info{\\n    display: flex;\\n    align-items: center;\\n    width: 110.5%;\\n    margin: 2% -5%;\\n    padding: 20px 50px 0px 50px;\\n    color: #dedfe4;\\n    background-color: transparent;//#2e4033;\\n    border-radius: 10px;\\n    font-family: 'Source Sans Pro', arial, sans-serif;\\n    font-size: 16px;\\n    font-weight: 200;\\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 5px 15px;\\n\\n    \\n    @media only screen and (max-width: 768px) {\\n      padding: 2%;\\n      font-size: 75%;\\n    }\\n\\n    &-ticker{\\n      text-align: left;\\n      float: left;\\n      width: 33.33333%;\\n    }\\n    &-company{\\n      text-align: center;\\n      float: left;\\n      width: 33.33333%;\\n    }\\n    &-updated{\\n      text-align: right;\\n      float:left;\\n      width: 33.33333%;\\n    }\\n  }\\n\\n  .chart-buttons{\\n    margin: 5px 0 0 16%;\\n  }\\n  .chart-button{\\n    color: #dedfe4;\\n    font-size: 16px;\\n    padding: 5px 15px;\\n    background-color: transparent;\\n    margin: 0 10px;\\n    border: none;\\n    border-radius: 10px;\\n\\n    &:hover,&:focus {\\n        background: #101010;\\n        outline: none;\\n        box-shadow: rgba(0, 0, 0, 0.4) 0px 3px 10px;\\n    }\\n  }\\n\"])));// Hook for dynamic window size\nfunction useWindowSize(){// Initialize state with undefined width/height so server and client renders match\n// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\nvar _useState=useState({width:undefined,height:undefined}),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];useEffect(function(){// Handler to call on window resize\nfunction handleResize(){// Set window width/height to state\nsetWindowSize({width:window.innerWidth,height:window.innerHeight});}// Add event listener\nwindow.addEventListener(\"resize\",handleResize);// Call handler right away so state gets updated with initial window size\nhandleResize();// Remove event listener on cleanup\nreturn function(){return window.removeEventListener(\"resize\",handleResize);};},[]);// Empty array ensures that effect is only run on mount\nreturn windowSize;}export var GraphSection=function GraphSection(){//grab global variables/functions to call in this file\nvar _useContext=useContext(GlobalContext),graphData_AV_API=_useContext.graphData_AV_API,graphSymbol=_useContext.graphSymbol,current_symbol=_useContext.current_symbol,current_company=_useContext.current_company,graph_type=_useContext.graph_type;var myWindow=useWindowSize();var chart_width=myWindow.width*2/3;var chart_height=myWindow.height*2/3;// Processes update to API call and sends data to candlestick chart.\nvar processGraphData=function processGraphData(){var time_series_type;if(graphData_AV_API['Time Series (15min)']){time_series_type='Time Series (15min)';}else if(graphData_AV_API['Time Series (60min)']){time_series_type='Time Series (60min)';}else{//if(graphData_AV_API['Time Series (Daily)']){\ntime_series_type='Time Series (Daily)';}var time_series_isDaily=time_series_type==='Time Series (Daily)'?true:false;var split_ratio=1.0;//this arrays are sus\nvar graphDataProcessed=[];var i=0;var date_counter=0;var previous_date='';var stop_graphing=false;// Iterate/translate API call to fit my charts inputs\nfor(var myDate in graphData_AV_API[time_series_type]){// Counts unique dates, stops graphing according to graph_Type\nif(!(previous_date===myDate.substr(0,10))){previous_date=myDate.substr(0,10);date_counter++;switch(graph_type){case'day':if(date_counter>1)stop_graphing=true;break;case'week':if(date_counter>5)stop_graphing=true;break;case'month':if(date_counter>20)stop_graphing=true;break;case'quarter':if(date_counter>60)stop_graphing=true;break;case'year':if(date_counter>253)stop_graphing=true;break;default:}if(stop_graphing)break;}// Some API data open==close==high==low, resulting in candles of size 0x0, resulting in empty graph. \n// flat_candle ensures candles are never 0x0 (invisible).\nvar flat_candle=+graphData_AV_API[time_series_type][myDate]['1. open']===+graphData_AV_API[time_series_type][myDate]['4. close']?0.001:0;graphDataProcessed.push({\"time\":i++,\"xAxis\":myDate,\"open\":(+graphData_AV_API[time_series_type][myDate]['1. open']/split_ratio).toFixed(2),\"close\":(flat_candle+graphData_AV_API[time_series_type][myDate]['4. close']/split_ratio).toFixed(2),\"high\":(+graphData_AV_API[time_series_type][myDate]['2. high']/split_ratio).toFixed(2),\"low\":(+graphData_AV_API[time_series_type][myDate]['3. low']/split_ratio).toFixed(2),\"volume\":+graphData_AV_API[time_series_type][myDate][time_series_isDaily?'6. volume':'5. volume']});if(time_series_isDaily)split_ratio*=+graphData_AV_API[time_series_type][myDate]['8. split coefficient'];}graphDataProcessed.reverse();return graphDataProcessed;};// Only for intialization: maybe make it display SPY as default\nvar _useState3=useState(function(){return processGraphData();}),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];// Whenever graphData_AV_API is changed, code below will update graph\nuseEffect(function(){if(current_symbol.length>0)setData(processGraphData());},[graph_type,current_symbol]);// eslint-disable-line react-hooks/exhaustive-deps\n// Convert JS date into easy to read date\nvar convertDate=function convertDate(dateString){if(!dateString)return\"error\";var myYear=dateString.substring(2,4);var myMonth=parseInt(dateString.substring(5,7),10);var myDay=parseInt(dateString.substring(8,10),10);if(dateString.length===10){return myMonth+\"/\"+myDay+\"/\"+myYear;}var myHour=parseInt(dateString.substring(11,13),10);var myMinute=dateString.substring(14,16);return myMonth+\"/\"+myDay+\"/\"+myYear+\" \"+myHour+\":\"+myMinute+\" EST\";};if(current_symbol.length>0){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(CSS,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-info-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stock-info\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"stock-info-ticker\",children:[\"Ticker: \",current_symbol]}),/*#__PURE__*/_jsxs(\"p\",{className:\"stock-info-company\",children:[\"Name: \",current_company]}),/*#__PURE__*/_jsxs(\"p\",{className:\"stock-info-updated\",children:[\"Updated: \",convertDate(graphData_AV_API[\"Meta Data\"][\"3. Last Refreshed\"])]})]}),/*#__PURE__*/_jsx(Chart,{data:data,graph_type:graph_type,width:chart_width,height:chart_height})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"chart-button\",onClick:function onClick(){return graphSymbol(current_symbol,current_company,'day',false);},children:\"1D\"}),/*#__PURE__*/_jsx(\"button\",{className:\"chart-button\",onClick:function onClick(){return graphSymbol(current_symbol,current_company,'week',false);},children:\"1W\"}),/*#__PURE__*/_jsx(\"button\",{className:\"chart-button\",onClick:function onClick(){return graphSymbol(current_symbol,current_company,'month',false);},children:\"1M\"}),/*#__PURE__*/_jsx(\"button\",{className:\"chart-button\",onClick:function onClick(){return graphSymbol(current_symbol,current_company,'quarter',false);},children:\"3M\"}),/*#__PURE__*/_jsx(\"button\",{className:\"chart-button\",onClick:function onClick(){return graphSymbol(current_symbol,current_company,'year',false);},children:\"1Y\"})]})]})});}else{return/*#__PURE__*/_jsx(_Fragment,{});}};","map":{"version":3,"names":["React","useContext","useEffect","useState","Chart","styled","GlobalContext","CSS","div","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","GraphSection","graphData_AV_API","graphSymbol","current_symbol","current_company","graph_type","myWindow","chart_width","chart_height","processGraphData","time_series_type","time_series_isDaily","split_ratio","graphDataProcessed","i","date_counter","previous_date","stop_graphing","myDate","substr","flat_candle","push","toFixed","reverse","data","setData","length","convertDate","dateString","myYear","substring","myMonth","parseInt","myDay","myHour","myMinute"],"sources":["/Users/JohnD/Documents/tradingview/src/components/GraphSection.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Chart from \"./chart-components/Chart\";\nimport styled from \"styled-components\";\n\nimport { GlobalContext } from '../context/GlobalState';\nimport \"../chart.css\";\n\nconst CSS = styled.div`\n\n  .chart-info-area{\n    margin: 0 16% 0 16%;\n    padding-top: 120px;\n  }\n\n  .stock-info{\n    display: flex;\n    align-items: center;\n    width: 110.5%;\n    margin: 2% -5%;\n    padding: 20px 50px 0px 50px;\n    color: #dedfe4;\n    background-color: transparent;//#2e4033;\n    border-radius: 10px;\n    font-family: 'Source Sans Pro', arial, sans-serif;\n    font-size: 16px;\n    font-weight: 200;\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 5px 15px;\n\n    \n    @media only screen and (max-width: 768px) {\n      padding: 2%;\n      font-size: 75%;\n    }\n\n    &-ticker{\n      text-align: left;\n      float: left;\n      width: 33.33333%;\n    }\n    &-company{\n      text-align: center;\n      float: left;\n      width: 33.33333%;\n    }\n    &-updated{\n      text-align: right;\n      float:left;\n      width: 33.33333%;\n    }\n  }\n\n  .chart-buttons{\n    margin: 5px 0 0 16%;\n  }\n  .chart-button{\n    color: #dedfe4;\n    font-size: 16px;\n    padding: 5px 15px;\n    background-color: transparent;\n    margin: 0 10px;\n    border: none;\n    border-radius: 10px;\n\n    &:hover,&:focus {\n        background: #101010;\n        outline: none;\n        box-shadow: rgba(0, 0, 0, 0.4) 0px 3px 10px;\n    }\n  }\n`;\n\n// Hook for dynamic window size\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport const GraphSection = () => {\n  //grab global variables/functions to call in this file\n  const { graphData_AV_API, graphSymbol, current_symbol, current_company, graph_type } = useContext(GlobalContext);\n\n  const myWindow = useWindowSize();\n  const chart_width = myWindow.width*2/3;\n  const chart_height = myWindow.height*2/3;\n\n  // Processes update to API call and sends data to candlestick chart.\n  const processGraphData = () => {\n    let time_series_type;\n    if(graphData_AV_API['Time Series (15min)']){\n      time_series_type = 'Time Series (15min)';\n    }else if(graphData_AV_API['Time Series (60min)']){\n      time_series_type = 'Time Series (60min)';\n    }else{//if(graphData_AV_API['Time Series (Daily)']){\n      time_series_type = 'Time Series (Daily)';\n    }\n    const time_series_isDaily = time_series_type === 'Time Series (Daily)' ? true : false;\n    let split_ratio = 1.0;\n\n    //this arrays are sus\n    let graphDataProcessed = [];\n    let i = 0\n\n    let date_counter = 0;\n    let previous_date = '';\n    let stop_graphing = false;\n    // Iterate/translate API call to fit my charts inputs\n    for(let myDate in graphData_AV_API[time_series_type]){\n      // Counts unique dates, stops graphing according to graph_Type\n      if( !(previous_date===myDate.substr(0,10)) ){\n        previous_date = myDate.substr(0,10);\n        date_counter++;\n        \n        switch(graph_type){\n            case 'day':\n                if(date_counter>1) stop_graphing = true;\n                break;\n            case 'week':\n                if(date_counter>5) stop_graphing = true;\n                break;\n            case 'month':\n                if(date_counter>20) stop_graphing = true;\n                break;\n            case 'quarter':\n                if(date_counter>60) stop_graphing = true;\n                break;\n            case 'year':\n                if(date_counter>253) stop_graphing = true;\n                break;\n            default:\n        }\n        if(stop_graphing) break;\n      }\n\n      // Some API data open==close==high==low, resulting in candles of size 0x0, resulting in empty graph. \n      // flat_candle ensures candles are never 0x0 (invisible).\n      let flat_candle = +graphData_AV_API[time_series_type][myDate]['1. open']=== +graphData_AV_API[time_series_type][myDate]['4. close'] ? 0.001 : 0;\n      \n      graphDataProcessed.push({\n        \"time\": i++,\n        \"xAxis\": myDate,\n        \"open\": (+graphData_AV_API[time_series_type][myDate]['1. open']/split_ratio).toFixed(2),\n        \"close\": (flat_candle+graphData_AV_API[time_series_type][myDate]['4. close']/split_ratio).toFixed(2),\n        \"high\": (+graphData_AV_API[time_series_type][myDate]['2. high']/split_ratio).toFixed(2),\n        \"low\": (+graphData_AV_API[time_series_type][myDate]['3. low']/split_ratio).toFixed(2),\n        \"volume\": +graphData_AV_API[time_series_type][myDate][time_series_isDaily ? '6. volume' : '5. volume']\n      });\n      if(time_series_isDaily) split_ratio *= +graphData_AV_API[time_series_type][myDate]['8. split coefficient'];\n    }\n    graphDataProcessed.reverse();\n    return graphDataProcessed;\n  };\n\n  // Only for intialization: maybe make it display SPY as default\n  const [data, setData] = useState(() => processGraphData());\n  // Whenever graphData_AV_API is changed, code below will update graph\n  useEffect(() => {\n    if(current_symbol.length>0) setData(processGraphData());\n  }, [graph_type, current_symbol]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Convert JS date into easy to read date\n  const convertDate = dateString => {\n    if(!dateString) return \"error\";\n    const myYear = dateString.substring(2,4);\n    const myMonth = parseInt(dateString.substring(5,7), 10);\n    const myDay = parseInt(dateString.substring(8,10), 10);\n    if(dateString.length===10){\n      return myMonth + \"/\" + myDay + \"/\" + myYear;\n    }\n    const myHour = parseInt(dateString.substring(11,13), 10);\n    const myMinute = dateString.substring(14,16);\n\n    return myMonth + \"/\" + myDay + \"/\" + myYear + \" \" + myHour + \":\" + myMinute + \" EST\";\n  }\n\n  if(current_symbol.length>0){\n    return (\n      <>\n      <CSS>\n        <div className=\"chart-info-area\">\n          <div className=\"stock-info\">\n            <p className=\"stock-info-ticker\">Ticker: {current_symbol}</p>\n            <p className=\"stock-info-company\">Name: {current_company}</p>\n            <p className=\"stock-info-updated\">Updated: {convertDate(graphData_AV_API[\"Meta Data\"][\"3. Last Refreshed\"])}</p>\n          </div>\n          <Chart data={data} graph_type={graph_type} width={chart_width} height={chart_height} />\n        </div>\n        <div className=\"chart-buttons\">\n          <button className=\"chart-button\" onClick={() => graphSymbol(current_symbol, current_company,'day', false)}>\n            1D\n          </button>\n          <button className=\"chart-button\" onClick={() => graphSymbol(current_symbol, current_company,'week', false)}>\n            1W\n          </button>\n          <button className=\"chart-button\" onClick={() => graphSymbol(current_symbol, current_company, 'month', false)}>\n            1M\n          </button>\n          <button className=\"chart-button\" onClick={() => graphSymbol(current_symbol, current_company, 'quarter', false)}>\n            3M\n          </button>\n          <button className=\"chart-button\" onClick={() => graphSymbol(current_symbol, current_company, 'year', false)}>\n            1Y\n          </button>\n        </div>\n      </CSS>\n      </>\n    )\n  }else{\n    return (\n      <>\n      </>\n    )\n  }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}